{"version":3,"sources":["../src/array-includes-x.js"],"names":[],"mappings":"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","file":"array-includes-x.esm.js","sourcesContent":["import attempt from 'attempt-x';\nimport toObject from 'to-object-x';\nimport toLength from 'to-length-x';\nimport sameValueZero from 'same-value-zero-x';\nimport findIndex from 'find-index-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\nimport indexOf from 'index-of-x';\nimport calcFromIndex from 'calculate-from-index-x';\n\nconst nativeIncludes = typeof Array.prototype.includes === 'function' && Array.prototype.includes;\n\nlet isWorking;\n\nif (nativeIncludes) {\n  let arr;\n\n  let res = attempt.call(null, nativeIncludes, 'a');\n  isWorking = res.threw;\n\n  if (isWorking) {\n    arr = {\n      1: 'a',\n      2: NaN,\n      3: -0,\n      length: 5,\n    };\n\n    /* eslint-disable-next-line no-void */\n    res = attempt.call(arr, nativeIncludes, void 0, -1);\n    isWorking = res.threw === false && res.value === true;\n  }\n\n  if (isWorking) {\n    res = attempt.call(arr, nativeIncludes, NaN);\n    isWorking = res.threw === false && res.value === true;\n  }\n\n  if (isWorking) {\n    res = attempt.call(arr, nativeIncludes, 0);\n    isWorking = res.threw === false && res.value === true;\n  }\n\n  if (isWorking) {\n    const testArr = [];\n    testArr.length = 2;\n    testArr[1] = null;\n    /* eslint-disable-next-line no-void */\n    res = attempt.call(testArr, nativeIncludes, void 0);\n    isWorking = res.threw === false && res.value === true;\n  }\n\n  if (isWorking) {\n    res = attempt.call('abc', nativeIncludes, 'c');\n    isWorking = res.threw === false && res.value === true;\n  }\n\n  if (isWorking) {\n    res = attempt.call(\n      (function getArgs() {\n        /* eslint-disable-next-line prefer-rest-params */\n        return arguments;\n      })('a', 'b', 'c'),\n      nativeIncludes,\n      'c',\n    );\n    isWorking = res.threw === false && res.value === true;\n  }\n}\n\n/**\n * This method determines whether an array includes a certain element,\n * returning true or false as appropriate.\n *\n * @param {Array} array - The array to search.\n * @throws {TypeError} If `array` is `null` or `undefined`.\n * @param {*} searchElement - Element to locate in the `array`.\n * @param {number} [fromIndex] - The position in this array at which to begin\n *  searching for searchElement. A negative value searches from the index of\n *  array.length + fromIndex by asc. Defaults to 0.\n * @returns {boolean} `true` if searched element is included; otherwise `false`.\n */\nlet $includes;\n\nif (isWorking) {\n  $includes = function includes(array, searchElement) {\n    const args = [searchElement];\n\n    if (arguments.length > 2) {\n      /* eslint-disable-next-line prefer-rest-params,prefer-destructuring */\n      args[1] = arguments[2];\n    }\n\n    return nativeIncludes.apply(array, args);\n  };\n} else {\n  /*\n   * This method returns an index in the array, if an element in the array\n   * satisfies the provided testing function. Otherwise -1 is returned.\n   *\n   * @private\n   * @param {Array} object - The array to search.\n   * @param {*} searchElement - Element to locate in the array.\n   * @param {number} fromIndex - The index to start the search at.\n   * @returns {number} Returns index of found element, otherwise -1.\n   */\n  const findIdxFrom = function findIndexFrom(object, searchElement, fromIndex) {\n    let fIdx = fromIndex;\n    const length = toLength(object.length);\n    while (fIdx < length) {\n      if (sameValueZero(object[fIdx], searchElement)) {\n        return fIdx;\n      }\n\n      fIdx += 1;\n    }\n\n    return -1;\n  };\n\n  $includes = function includes(array, searchElement) {\n    const object = toObject(array);\n    const iterable = splitIfBoxedBug(object);\n    const length = toLength(iterable.length);\n\n    if (length < 1) {\n      return -1;\n    }\n\n    if (typeof searchElement === 'undefined') {\n      /* eslint-disable-next-line prefer-rest-params */\n      let fromIndex = calcFromIndex(iterable, arguments[2]);\n\n      if (fromIndex >= length) {\n        return -1;\n      }\n\n      if (fromIndex < 0) {\n        fromIndex = 0;\n      }\n\n      if (fromIndex > 0) {\n        return findIdxFrom(iterable, searchElement, fromIndex) > -1;\n      }\n\n      return (\n        findIndex(iterable, (element) => {\n          return sameValueZero(searchElement, element);\n        }) > -1\n      );\n    }\n\n    /* eslint-disable-next-line prefer-rest-params */\n    return indexOf(iterable, searchElement, arguments[2], 'samevaluezero') > -1;\n  };\n}\n\nconst inc = $includes;\n\nexport default inc;\n"]}